<launch>
  <param name="robot_description"
         textfile="$(find hrpsys_ros_bridge_tutorials)/models/pa10.urdf" />

  <!-- robot model visualization -->
  <node pkg="jsk_interactive_marker" type="semantic_robot_state_generator.py" name="semantic_robot_state_generator" >
    <rosparam>
      root_link: BASE_LINK
      global_frame: world
    </rosparam>
  </node>

  <!-- interactive marker -->
  <node pkg="jsk_interactive_marker" type="transformable_server_sample" name="transformable_interactive_server">
    <param name="display_interactive_manipulator" value="true"/>
  </node>

  <!-- inverse kinematics node -->
  <node pkg="eus_qp" type="demo-node-optmotiongen-interactive.l" name="optmotiongen_interactive"
        output="screen" >
    <rosparam>
      visualize: true
    </rosparam>
  </node>

  <!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz"
        args="-d $(find eus_qp)/optmotiongen/config/demo_optmotiongen_interactive.rviz" >
  </node>
</launch>
